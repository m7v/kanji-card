{"version":3,"sources":["serviceWorker.js","components/FlipCard/index.js","components/KanjiCard/index.jsx","libs/config.js","libs/firebase.js","components/Stack/index.jsx","containers/App/index.jsx","index.js"],"names":["Boolean","window","location","hostname","match","FlipCard","className","cx","FlipCard__flipped","this","props","isFlipped","react_default","a","createElement","children","React","PureComponent","KanjiCard","classes","useStyles","_React$useState","useState","_React$useState2","Object","slicedToArray","setState","showBack","debounce","showFront","paper","src_components_FlipCard","Paper","clsx","main","card","onClick","tags","data","map","attr","i","key","concat","Typography","variant","sign","other","gutterBottom","on","kun","meaning","makeStyles","theme","cursor","height","width","userSelect","borderRadius","padding","spacing","textAlign","display","flexDirection","justifyContent","alignItems","color","palette","text","secondary","position","top","right","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","production","localStorage","getItem","getDateWithHoursAndMinutes","date","Date","getMonth","getDate","getFullYear","getHours","getMinutes","getTime","firebase","Firebase","classCallCheck","app","initializeApp","db","database","_this","Promise","resolve","ref","once","isReset","state","val","currentDateWithMinutes","cardInReview","values","reviewList","cardInReviewIds","keys","cardInLearned","knowList","cardInLearnedIds","learnedLevels","levels","preferredOrder","prefererOrder","allCards","items","filter","item","includes","savedDay","activity","nowDay","set","dateForSaving","countForSaving","count","withoutNew","maxNew","length","cards","message","removeIds","toConsumableArray","Number","newCards","orderBy","id","o","newCardPool","compact","find","reviewCards","day","splice","maxReview","shuffle","undefined","status","addToNewList","addToReviewList","_this2","addToKnowList","HOUR","intervalRepeating","DAY","objectSpread","to","x","y","scale","rot","Math","random","delay","from","trans","r","s","gone","Set","repeat","Stack","circle","_React$useState3","_React$useState4","setCards","_React$useState5","_React$useState6","setMessage","_useSprings","useSprings","_useSprings2","useEffect","getKanjiCards","then","_ref","bind","useGesture","_ref2","index","args","down","xDelta","delta","xDir","direction","velocity","dir","console","log","add","upCardStatus","lowCardStatus","isGone","has","innerWidth","friction","tension","Fragment","wrapper","container","Button","setTimeout","list","forEach","push","clear","indexOf","_ref3","web","div","style","transform","interpolate","assign","actions","ButtonGroup","fullWidth","aria-label","backgroundColor","primary","overflow","willChange","bottom","root","createMuiTheme","grey","light","indigo","dark","typography","useNextVariants","fontFamily","join","ReactDOM","render","ThemeProvider","CssBaseline","Grid","justify","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gQAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,4OCOSC,mLAnBP,IAAMC,EAAYC,IAAG,CACjBF,UAAY,EACZG,kBAAqBC,KAAKC,MAAMC,YAEpC,OACIC,EAAAC,EAAAC,cAAA,OAAKR,UAAWA,GACZM,EAAAC,EAAAC,cAAA,OAAKR,UAAU,qBACXM,EAAAC,EAAAC,cAAA,OAAKR,UAAU,mBACVG,KAAKC,MAAMK,SAAU,IAE1BH,EAAAC,EAAAC,cAAA,OAAKR,UAAU,kBACVG,KAAKC,MAAMK,SAAU,aAbvBC,IAAMC,eCId,SAASC,EAAUR,GAC9B,IAAMS,EAAUC,IADqBC,EAEHL,IAAMM,SAAS,CAAEX,WAAW,IAFzBY,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAE5BV,EAF4BY,EAAA,GAE5BZ,UAAae,EAFeH,EAAA,GAI/BI,EAAWC,IAAS,kBAAMF,EAAS,CAAEf,WAAW,KAAS,KACzDkB,EAAYD,IAAS,kBAAMF,EAAS,CAAEf,WAAW,KAAU,KAEjE,OACIC,EAAAC,EAAAC,cAAA,OAAKR,UAAWa,EAAQW,OACpBlB,EAAAC,EAAAC,cAACiB,EAAD,CAAUpB,UAAWA,GACjBC,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAO1B,UAAW2B,YAAKd,EAAQe,KAAMf,EAAQgB,MAAOC,QAAST,GACzDf,EAAAC,EAAAC,cAAA,OAAKR,UAAW2B,YAAKd,EAAQkB,OACxB3B,EAAM4B,KAAKD,KAAKE,IAAI,SAACC,EAAMC,GAAP,OAAa7B,EAAAC,EAAAC,cAAA,OAAK4B,IAAG,GAAAC,OAAKF,GAALE,OAASH,IAASA,MAEhE5B,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAYC,QAAQ,MACfnC,EAAM4B,KAAKQ,OAGpBlC,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAO1B,UAAW2B,YAAKd,EAAQ4B,MAAO5B,EAAQgB,MAAOC,QAASP,GAC1DjB,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAYC,QAAQ,KAAKG,cAAY,GAChCtC,EAAM4B,KAAKQ,MAEhBlC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAYC,QAAQ,YAAYG,cAAY,GACvCtC,EAAM4B,KAAKW,IAEhBrC,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAYC,QAAQ,YAAYG,cAAY,GACvCtC,EAAM4B,KAAKY,KAEhBtC,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAYC,QAAQ,QAAQG,cAAY,GACnCtC,EAAM4B,KAAKa,aASxC,IAAM/B,EAAYgC,YAAW,SAAAC,GAAK,MAAK,CACnCvB,MAAO,CACHwB,OAAQ,UACRC,OAAQ,IACRC,MAAO,KAEXrB,KAAM,CACFsB,WAAY,OACZC,aAAc,GACdC,QAASN,EAAMO,QAAQ,GACvBL,OAAQ,OACRC,MAAO,OACPK,UAAW,SACXC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,UAEhB/B,KAAM,GAGNa,MAAO,CACHmB,MAAOb,EAAMc,QAAQC,KAAKC,WAE9BhC,KAAM,CACFiC,SAAU,WACVC,IAAK,OACLC,MAAO,OACPN,MAAO,uGC3EFO,EAAS,CAClBC,OAAQC,0CACRC,WAAYD,6BACZE,YAAaF,oCACbG,UAAWH,aACXI,cAAeJ,yBACfK,kBAAmBL,cACnBM,MAAON,sCCCLO,IAAeC,aAAaC,QAAQ,4BAcpCC,EAA6B,WAClC,IAAMC,EAAO,IAAIC,KACjB,OAAQ,IAAIA,KAAJ,GAAA5C,OAAY2C,EAAKE,WAAa,EAA9B,KAAA7C,OAAmC2C,EAAKG,UAAxC,KAAA9C,OAAqD2C,EAAKI,cAA1D,KAAA/C,OAA2E2C,EAAKK,WAAhF,KAAAhD,OAA8F2C,EAAKM,eAAiBC,WA6N9GC,EAAA,eAzNd,SAAAC,IAAevE,OAAAwE,EAAA,EAAAxE,CAAAf,KAAAsF,GACdE,IAAIC,cAAczB,GAElBhE,KAAK0F,GAAKF,IAAIG,uEA2CC,IAAAC,EAAA5F,KACf,OAAO,IAAI6F,QAAQ,SAACC,GACnBF,EAAKF,GAAGK,IAAI,KAAKC,KAAK,QAAS,SAACnE,GAC/B,IAAIoE,GAAU,EACRC,EAAQrE,EAAKsE,MACbC,EAAyBxB,IACzByB,EAAetF,OAAOuF,OAAOJ,EAAMK,YAAc,IACjDC,EAAkBzF,OAAO0F,KAAKP,EAAMK,YAAc,IAClDG,EAAgB3F,OAAOuF,OAAOJ,EAAMS,UAAY,IAChDC,EAAmB7F,OAAO0F,KAAKP,EAAMS,UAAY,IACjDE,EAAgBX,EAAMlC,OAAO8C,QAAU,GACvCC,EAAiBb,EAAMlC,OAAOgD,eAAiB,GAC/CC,EAAWlG,OAAOuF,OAAOJ,EAAMgB,OACnCC,OAAO,SAACC,GAAD,OAAUP,EAAcQ,SAASD,EAAKxF,KAAK,MAE9C0F,EAAY,IAAIxC,KAAKoB,EAAMqB,SAAS1C,MAAOG,UAC3CwC,EAAU,IAAI1C,KAAKsB,GAAyBpB,UAMlD,GAJKkB,EAAMqB,SAAS1C,MACnBe,EAAKF,GAAGK,IAAI,iBAAiB0B,IAAIrB,GAG9BF,EAAMqB,SAAS1C,KAAOuB,EAAwB,CACjD,IAAMsB,EAAgBJ,IAAaE,EAAStB,EAAMqB,SAAS1C,KAAOuB,EAClER,EAAKF,GAAGK,IAAI,iBAAiB0B,IAAIC,GACjCxB,EAAMqB,SAAS1C,KAAO6C,EAEtB,IAAMC,EAAiBL,IAAaE,EAAStB,EAAMqB,SAASK,MAAQ,EACpEhC,EAAKF,GAAGK,IAAI,kBAAkB0B,IAAIE,GAClCzB,EAAMqB,SAASK,MAAQD,EACvB1B,EAA6B,IAAnB0B,EAEX,IAAME,EAAa3B,EAAMqB,SAASK,OAAS1B,EAAMlC,OAAO8D,OAExD,IAAK7B,GAAWqB,IAAaE,GACxBK,IAAerB,EAAgBuB,OAClC,OAAOjC,EAAQ,CACdkC,MAAO,GACPC,QAAS,qBAKZ,IAAMC,EAAY,GAAAhG,OAAAnB,OAAAoH,EAAA,EAAApH,CAAIyF,GAAJzF,OAAAoH,EAAA,EAAApH,CAAwB6F,IAAkB9E,IAAI,SAAAE,GAAC,OAAIoG,OAAOpG,KACtEqG,EAAWR,EACd,GACAS,IACDrB,EAASE,OAAO,SAACC,GAAD,OAAWc,EAAUb,SAASD,EAAKmB,MACnD,SAACC,GAAD,OAAOA,EAAE5G,KAAK,GAAGjC,MAAM,OAAO,IAC9B,QAGE8I,EAAgB1B,EAAegB,OAChCW,IACD3B,EAAejF,IAAI,SAACE,GAAD,OAAOqG,EAASM,KAAK,SAACH,GAAD,OAAOA,EAAED,KAAOvG,OAEvDqG,EAEGO,EAAc,GAAA1G,OAAAnB,OAAAoH,EAAA,EAAApH,CAAIsF,GAAJtF,OAAAoH,EAAA,EAAApH,CAAqB2F,IACvCS,OAAO,SAACzF,GAAD,OAAUA,EAAKmD,KAAOnD,EAAKmH,KAAOzC,IACzC0C,OAAO,EAAG5C,EAAMlC,OAAO+E,WAEnBf,EAAK,GAAA9F,OAAAnB,OAAAoH,EAAA,EAAApH,CACP0H,EAAYK,OAAO,EAAG5C,EAAMlC,OAAO8D,OAAS5B,EAAMqB,SAASK,QADpD7G,OAAAoH,EAAA,EAAApH,CAEP6H,IAGJ,OAAKZ,EAAMD,OAOJjC,EAAQ,CACdkC,MAAOgB,IAAQhB,GACfC,aAASgB,IARFnD,EAAQ,CACdkC,MAAO,GACPC,QAAS,+DAYAvG,GACR+C,IA9IW,aAkJZ/C,EAAKwH,OAnJM,eAwJXxH,EAAKwH,QACRlJ,KAAKmJ,aAAazH,GALlB1B,KAAKoJ,gBAAgB1H,yCAUVA,GAAM,IAAA2H,EAAArJ,KACbyE,IA/JU,eAmKX/C,EAAKwH,QAlKO,aAkKgBxH,EAAKwH,QAKhCxH,EAAKwH,QACTlJ,KAAK0F,GAAGK,IAAI,mBAAmBC,KAAK,QAAS,SAACnE,GAC7C,IAAM+F,EAAQ/F,EAAKsE,MACnBkD,EAAK3D,GAAGK,IAAI,kBAAkB0B,IAAIG,EAAQ,KAI5C5H,KAAKoJ,gBAAgB1H,IAXpB1B,KAAKsJ,cAAc5H,0CAcPA,GACb,GAAK+C,EAKL,GAvLgB,aAuLZ/C,EAAKwH,QAAwBxH,EAAKmH,KAAOU,MAC5CvJ,KAAKoJ,gBAAgB1H,OADtB,CAKA,IAAM8H,EAAoB9H,EAAKmH,IAAiB,EAAXnH,EAAKmH,KA9L9BY,OA+LT/H,EAAKmH,IA/LIY,OAgMT/H,EAAKmH,IAAiB,EAAXnH,EAAKmH,IACbhE,EAhMS,eAgMFnD,EAAKwH,OA7LJ,WACf,IAAMrE,EAAO,IAAIC,KACjB,OAAQ,IAAIA,KAAJ,GAAA5C,OAAY2C,EAAKE,WAAa,EAA9B,KAAA7C,OAAmC2C,EAAKG,UAAxC,KAAA9C,OAAqD2C,EAAKI,gBAAkBG,UA2L3CJ,GAAYtD,EAAKmD,KAEzD7E,KAAK0F,GAAGK,IAAR,YAAA7D,OAAwBR,EAAK6G,KAAMd,IAAnC1G,OAAA2I,EAAA,EAAA3I,CAAA,GAA4CW,EAA5C,CAAkDmD,OAAMgE,IAAKW,EAAmBN,OAjMhE,cAkMhBlJ,KAAK0F,GAAGK,IAAR,cAAA7D,OAA0BR,EAAK6G,KAAMd,IAAI,+CAG1B/F,GACf,GAAK+C,EAAL,CAIA,IAAM+E,EAAqB9H,EAAKmH,IAE7BnH,EAAKmH,KAAOU,MA/MLA,MAiNN7H,EAAKmH,IAAiB,EAAXnH,EAAKmH,IAnNE,IAoNhBhE,EAAOnD,EAAKmD,KACfnD,EAAKmD,KACLD,IAEH5E,KAAK0F,GAAGK,IAAR,YAAA7D,OAAwBR,EAAK6G,KAAMd,IAAI,MACvCzH,KAAK0F,GAAGK,IAAR,cAAA7D,OAA0BR,EAAK6G,KAAMd,IAArC1G,OAAA2I,EAAA,EAAA3I,CAAA,GAA8CW,EAA9C,CAAoDmD,OAAMgE,IAAKW,EAAmBN,OArNnE,sDAwNHxH,GACP+C,IAILzE,KAAK0F,GAAGK,IAAR,YAAA7D,OAAwBR,EAAK6G,KAAMd,IAAI,MACvCzH,KAAK0F,GAAGK,IAAR,cAAA7D,OAA0BR,EAAK6G,KAAMd,IAArC1G,OAAA2I,EAAA,EAAA3I,CAAA,GACIW,EADJ,CAECmD,KAAMD,IACNiE,IArOqB,IAsOrBK,OAlOc,2BCHXS,EAAK,SAAC3H,GAAD,MAAQ,CAAE4H,EAAG,EAAGC,GAAQ,EAAL7H,EAAQ8H,MAAO,EAAGC,IAA2B,GAAhBC,KAAKC,SAAV,GAAyBC,MAAW,GAAJlI,IAChFmI,EAAO,SAACnI,GAAD,MAAQ,CAAE4H,EAAG,EAAGG,IAAK,EAAGD,MAAO,IAAKD,GAAI,MAE/CO,EAAQ,SAACC,EAAGC,GAAJ,mDAAApI,OAAuDmI,EAAI,GAA3D,iBAAAnI,OAA6EmI,EAA7E,eAAAnI,OAA4FoI,EAA5F,MAERC,EAAO,IAAIC,IACXC,GAAS,IAAID,IAEZ,SAASE,KACZ,IAAMhK,EAAUC,KADIC,EAEWL,IAAMM,SAAS,CAAE8J,OAAQ,IAFpC7J,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEX+J,EAFW7J,EAAA,GAEX6J,OAAU1J,EAFCH,EAAA,GAAA8J,EAGQrK,IAAMM,SAAS,IAHvBgK,EAAA9J,OAAAC,EAAA,EAAAD,CAAA6J,EAAA,GAGZ5C,EAHY6C,EAAA,GAGLC,EAHKD,EAAA,GAAAE,EAIYxK,IAAMM,cAASoI,GAJ3B+B,EAAAjK,OAAAC,EAAA,EAAAD,CAAAgK,EAAA,GAIZ9C,EAJY+C,EAAA,GAIHC,EAJGD,EAAA,GAAAE,EAKGC,YAAWnD,EAAMD,OAAQ,SAAA/F,GAAC,OAAAjB,OAAA2I,EAAA,EAAA3I,CAAA,GAAU4I,EAAG3H,GAAb,CAAiBmI,KAAMA,EAAKnI,OALzDoJ,EAAArK,OAAAC,EAAA,EAAAD,CAAAmK,EAAA,GAKZjL,EALYmL,EAAA,GAKL3D,EALK2D,EAAA,GAOpB7K,IAAM8K,UAAU,WACZhG,EAASiG,gBAAgBC,KAAK,SAAAC,GAAwB,IAArBxD,EAAqBwD,EAArBxD,MAAOC,EAAcuD,EAAdvD,QACpC6C,EAAS9C,GACTiD,EAAWhD,MAEhB,IAGH,IAAMwD,EAAOC,YAAW,SAAAC,GAA2E,IAAjEC,EAAiE7K,OAAAC,EAAA,EAAAD,CAAA4K,EAAxEE,KAAwE,MAAzDC,EAAyDH,EAAzDG,KAAcC,EAA2ChL,OAAAC,EAAA,EAAAD,CAAA4K,EAAnDK,MAAmD,MAAtBC,EAAsBlL,OAAAC,EAAA,EAAAD,CAAA4K,EAAlCO,UAAkC,MAAfC,EAAeR,EAAfQ,SAE1EC,EAAMH,EAAO,GAAK,EAAI,GAEvBH,GAHWK,EAAW,KAIX,IAARC,IACAC,QAAQC,IAAI,oBACZ/B,EAAKgC,IAAIX,GACTvG,EAASmH,aAAaxE,EAAM4D,MAEnB,IAATQ,IACAC,QAAQC,IAAI,kBACZ7B,GAAO8B,IAAIX,GACXvG,EAASoH,cAAczE,EAAM4D,MAIrCnE,EAAI,SAACzF,GACD,GAAI4J,IAAU5J,EAAd,CAIA,IAAM0K,EAASnC,EAAKoC,IAAIf,IAAUnB,GAAOkC,IAAIf,GAK7C,MAAO,CAAEhC,EAJC8C,GAAU,IAAMlN,OAAOoN,YAAcR,EAAMN,EAAOC,EAAS,EAIzDhC,IAHAgC,EAAS,KAAOW,EAAe,GAANN,EAAWD,EAAW,GAG1CrC,MAFHgC,EAAO,IAAM,EAEH5B,WAAOjB,EAAWjF,OAAQ,CAAE6I,SAAU,GAAIC,QAAShB,EAAO,IAAMY,EAAS,IAAM,WAiB/G,OACIvM,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2M,SAAA,KACI5M,EAAAC,EAAAC,cAAA,OAAKR,UAAWa,EAAQsM,WACjB/E,GACC9H,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAYsB,MAAM,YAAYrB,QAAQ,KAAKG,cAAY,GAAvD,0CAIDyF,EAAMD,QACL5H,EAAAC,EAAAC,cAAA,OAAKR,UAAWa,EAAQuM,WACpB9M,EAAAC,EAAAC,cAAC6M,EAAA,EAAD,CAAQzJ,MAAM,YAAY9B,QAvB7B,WACb0K,QAAQC,IAAI,eACZa,WAAW,WACPlM,EAAS,CAAE0J,OAAQA,EAAS,IAC5B,IAAIyC,EAAO,GACX3C,GAAO4C,QAAQ,SAACrL,GAAD,OAAOoL,EAAKE,KAAKtL,KAChCuI,EAAKgD,QACL9C,GAAO8C,QACP9F,EAAI,SAACzF,GAAD,OAA4B,IAArBoL,EAAKI,QAAQxL,GAAY2H,EAAG3H,GAAKmI,EAAKnI,MAClD,OAca,mCAGP/B,EAAM6B,IAAI,SAAA2L,EAAuBzL,GAAvB,IAAG4H,EAAH6D,EAAG7D,EAAGC,EAAN4D,EAAM5D,EAAGE,EAAT0D,EAAS1D,IAAKD,EAAd2D,EAAc3D,MAAd,OACP3J,EAAAC,EAAAC,cAACqN,EAAA,EAASC,IAAV,CAAc9N,UAAWa,EAAQuM,UAAWhL,IAAK+F,EAAMhG,GAAGuG,GAAIqF,MAAO,CAAEC,UAAWC,YAAY,CAAClE,EAAGC,GAAI,SAACD,EAAGC,GAAJ,qBAAA3H,OAAyB0H,EAAzB,OAAA1H,OAAgC2H,EAAhC,iBAAA3H,OAAiD0H,EAAI,GAArD,YAElGzJ,EAAAC,EAAAC,cAACqN,EAAA,EAASC,IAAV5M,OAAAgN,OAAA,GAAkBtC,EAAKzJ,GAAvB,CAA2B4L,MAAO,CAAEC,UAAWC,YAAY,CAAC/D,EAAKD,GAAQM,MACrEjK,EAAAC,EAAAC,cAACI,EAAD,CAAWwB,IAAK+F,EAAMhG,GAAGuG,GAAKoC,EAAQ9I,KAAMmG,EAAMhG,YAK/DgG,EAAMD,QACL5H,EAAAC,EAAAC,cAAA,OAAKR,UAAWa,EAAQsN,SACpB7N,EAAAC,EAAAC,cAAC4N,EAAA,EAAD,CAAaC,WAAS,EAACzK,MAAM,YAAY0K,aAAW,iCAChDhO,EAAAC,EAAAC,cAAC6M,EAAA,EAAD,CAAQvL,QAAS,kBAAM0K,QAAQC,IAAI,UAAnC,sBACAnM,EAAAC,EAAAC,cAAC6M,EAAA,EAAD,CAAQvL,QAAS,kBAAM0K,QAAQC,IAAI,WAAnC,mBAQxB,IAAM3L,GAAYgC,YAAW,SAACC,GAAD,MAAY,CACrCoK,QAAS,CACLoB,gBAAiBxL,EAAMc,QAAQ2K,QAAQ5M,KACvCoC,SAAU,QACVyK,SAAU,SACVjL,QAAS,OACTE,eAAgB,SAChBC,WAAY,SACZT,MAAO,OACPD,OAAQ,QAEZmK,UAAW,CACPjK,WAAY,OACZoL,gBAAiB,cACjBvK,SAAU,WACV0K,WAAY,aAEhBP,QAAS,CACLnK,SAAU,WACVd,MAAO,IACPyL,OAAQ,OCrHhB,IAAM7N,GAAYgC,YAAW,iBAAO,CAClC8L,KAAM,CACJ1L,MAAO,OACPD,OAAQ,WCRNF,GAAQ8L,YAAe,CACzBhL,QAAS,CACL2K,QAAS,CACL1K,KAAMgL,IAAK,KACXC,MAAOD,IAAK,KACZlN,KAAMoN,IAAO,IACbC,KAAMH,IAAK,OAGnBI,WAAY,CACRC,iBAAiB,EACjBC,WAAY,CACR,kBACA,6CACA,gBACA,kBACA,+BACA,4BACA,+CACA,YACA,mBACA,2BACA,iCACA,8CACA,aACA,wCACA,YACA,cACFC,KAAK,QAIfC,IAASC,OACLjP,EAAAC,EAAAC,cAACgP,EAAA,EAAD,CAAezM,MAAOA,IAClBzC,EAAAC,EAAAC,cAACiP,EAAA,EAAD,MACAnP,EAAAC,EAAAC,cDxCO,WACb,IAAMK,EAAUC,KAEhB,OACER,EAAAC,EAAAC,cAACkP,EAAA,EAAD,CAAMtC,WAAS,EAACuC,QAAQ,SAAS3P,UAAWa,EAAQ+N,MAClDtO,EAAAC,EAAAC,cAACqK,GAAD,QCmCE,OAER+E,SAASC,eAAe,SPkFlB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtE,KAAK,SAAAuE,GACjCA,EAAaC","file":"static/js/main.75aadb6d.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './index.css';\nimport React from 'react';\nimport cx from 'classnames';\n\nclass FlipCard extends React.PureComponent {\n    render() {\n        const className = cx({\n            'FlipCard': true,\n            'FlipCard__flipped': this.props.isFlipped,\n        });\n        return (\n            <div className={className}>\n                <div className=\"FlipCard__Flipper\">\n                    <div className=\"FlipCard__Front\">\n                        {this.props.children[ 0 ]}\n                    </div>\n                    <div className=\"FlipCard__Back\">\n                        {this.props.children[ 1 ]}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FlipCard;\n","import React from 'react';\nimport debounce from 'lodash/debounce';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport FlipCard from '../FlipCard';\n\nexport default function KanjiCard(props) {\n    const classes = useStyles();\n    const [{ isFlipped }, setState] = React.useState({ isFlipped: false });\n\n    const showBack = debounce(() => setState({ isFlipped: true }), 150);\n    const showFront = debounce(() => setState({ isFlipped: false }), 150);\n\n    return (\n        <div className={classes.paper}>\n            <FlipCard isFlipped={isFlipped}>\n                <Paper className={clsx(classes.main, classes.card)} onClick={showBack}>\n                    <div className={clsx(classes.tags)}>\n                        {props.data.tags.map((attr, i) => <div key={`${i}${attr}`}>{attr}</div>)}\n                    </div>\n                    <Typography variant=\"h1\">\n                        {props.data.sign}\n                    </Typography>\n                </Paper>\n                <Paper className={clsx(classes.other, classes.card)} onClick={showFront}>\n                    <Typography variant=\"h2\" gutterBottom>\n                        {props.data.sign}\n                    </Typography>\n                    <div>\n                        <Typography variant=\"subtitle2\" gutterBottom>\n                            {props.data.on}\n                        </Typography>\n                        <Typography variant=\"subtitle2\" gutterBottom>\n                            {props.data.kun}\n                        </Typography>\n                        <Typography variant=\"body1\" gutterBottom>\n                            {props.data.meaning}\n                        </Typography>\n                    </div>\n                </Paper>\n            </FlipCard>\n        </div>\n    );\n}\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        cursor: 'pointer',\n        height: 350,\n        width: 250,\n    },\n    card: {\n        userSelect: 'none',\n        borderRadius: 10,\n        padding: theme.spacing(2),\n        height: '100%',\n        width: '100%',\n        textAlign: 'center',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    main: {\n\n    },\n    other: {\n        color: theme.palette.text.secondary,\n    },\n    tags: {\n        position: 'absolute',\n        top: '10px',\n        right: '10px',\n        color: '#ccc',\n    }\n}));\n","export const config = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID,\n};\n","import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport orderBy from 'lodash/orderBy';\nimport shuffle from 'lodash/shuffle';\nimport compact from 'lodash/compact';\nimport { config } from './config';\n\nconst production = !!localStorage.getItem('私の信仰');\n\nconst FIFTEEN_MINUTES = 1000 * 60 * 15;\nconst HOUR = FIFTEEN_MINUTES * 4;\nconst DAY = HOUR * 24;\nconst MONTH = DAY * 30;\nconst IN_LEARN = 'inLearning';\nconst TO_REVIEW = 'toReview';\n\nconst getDate = () => {\n\tconst date = new Date();\n\treturn (new Date(`${date.getMonth() + 1}.${date.getDate()}.${date.getFullYear()}`)).getTime();\n};\n\nconst getDateWithHoursAndMinutes = () => {\n\tconst date = new Date();\n\treturn (new Date(`${date.getMonth() + 1}.${date.getDate()}.${date.getFullYear()} ${date.getHours()}:${date.getMinutes()}`)).getTime();\n};\n\nclass Firebase {\n\tconstructor() {\n\t\tapp.initializeApp(config);\n\t\t// this.auth = app.auth();\n\t\tthis.db = app.database();\n\t}\n\t//\n\t// login(email, password) {\n\t// \treturn this.auth.signInWithEmailAndPassword(email, password);\n\t// }\n\t//\n\t// logout() {\n\t// \treturn this.auth.signOut()\n\t// }\n\t//\n\t// async register(name, email, password) {\n\t// \tawait this.auth.createUserWithEmailAndPassword(email, password);\n\t// \treturn this.auth.currentUser.updateProfile({\n\t// \t\tdisplayName: name,\n\t// \t})\n\t// }\n\t//\n\t// addQuote(quote) {\n\t// \tif(!this.auth.currentUser) {\n\t// \t\treturn alert('Not authorized');\n\t// \t}\n\t//\n\t// \treturn this.db.doc(`users_codedamn_video/${this.auth.currentUser.uid}`).set({\n\t// \t\tquote,\n\t// \t})\n\t// }\n\t//\n\t// isInitialized() {\n\t// \treturn new Promise(resolve => {\n\t// \t\tthis.auth.onAuthStateChanged(resolve);\n\t// \t});\n\t// }\n\t//\n\t// getCurrentUsername() {\n\t// \treturn this.auth.currentUser && this.auth.currentUser.displayName;\n\t// }\n\t//\n\t// async getCurrentUserQuote() {\n\t// \tconst quote = await this.db.doc(`users_codedamn_video/${this.auth.currentUser.uid}`).get();\n\t// \treturn quote.get('quote');\n\t// }\n\n\tgetKanjiCards() {\n\t\treturn new Promise((resolve) => {\n\t\t\tthis.db.ref('/').once('value', (data) => {\n\t\t\t\tlet isReset = false;\n\t\t\t\tconst state = data.val();\n\t\t\t\tconst currentDateWithMinutes = getDateWithHoursAndMinutes();\n\t\t\t\tconst cardInReview = Object.values(state.reviewList || {});\n\t\t\t\tconst cardInReviewIds = Object.keys(state.reviewList || {});\n\t\t\t\tconst cardInLearned = Object.values(state.knowList || {});\n\t\t\t\tconst cardInLearnedIds = Object.keys(state.knowList || {});\n\t\t\t\tconst learnedLevels = state.config.levels || [];\n\t\t\t\tconst preferredOrder = state.config.prefererOrder || [];\n\t\t\t\tconst allCards = Object.values(state.items)\n\t\t\t\t\t.filter((item) => learnedLevels.includes(item.tags[0]));\n\n\t\t\t\tconst savedDay = (new Date(state.activity.date)).getDate();\n\t\t\t\tconst nowDay = (new Date(currentDateWithMinutes)).getDate();\n\n\t\t\t\tif (!state.activity.date) {\n\t\t\t\t\tthis.db.ref('activity/date').set(currentDateWithMinutes);\n\t\t\t\t}\n\n\t\t\t\tif (state.activity.date < currentDateWithMinutes) {\n\t\t\t\t\tconst dateForSaving = savedDay === nowDay ? state.activity.date : currentDateWithMinutes;\n\t\t\t\t\tthis.db.ref('activity/date').set(dateForSaving);\n\t\t\t\t\tstate.activity.date = dateForSaving;\n\n\t\t\t\t\tconst countForSaving = savedDay === nowDay ? state.activity.count : 0;\n\t\t\t\t\tthis.db.ref('activity/count').set(countForSaving);\n\t\t\t\t\tstate.activity.count = countForSaving;\n\t\t\t\t\tisReset = countForSaving === 0;\n\t\t\t\t}\n\t\t\t\tconst withoutNew = state.activity.count >= state.config.maxNew;\n\n\t\t\t\tif (!isReset && savedDay === nowDay) {\n\t\t\t\t\tif (withoutNew && !cardInReviewIds.length) {\n\t\t\t\t\t\treturn resolve({\n\t\t\t\t\t\t\tcards: [],\n\t\t\t\t\t\t\tmessage: 'You need to rest'\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst removeIds = [...cardInReviewIds, ...cardInLearnedIds].map(i => Number(i));\n\t\t\t\tconst newCards = withoutNew\n\t\t\t\t\t? []\n\t\t\t\t\t: orderBy(\n\t\t\t\t\t\tallCards.filter((item) => !removeIds.includes(item.id)),\n\t\t\t\t\t\t(o) => o.tags[0].match(/\\d/g)[0],\n\t\t\t\t\t\t'desc'\n\t\t\t\t\t);\n\n\t\t\t\tlet newCardPool = !!preferredOrder.length\n\t\t\t\t\t? compact(\n\t\t\t\t\t\tpreferredOrder.map((i) => newCards.find((o) => o.id === i))\n\t\t\t\t\t)\n\t\t\t\t\t: newCards;\n\n\t\t\t\tconst reviewCards = [...cardInReview, ...cardInLearned]\n\t\t\t\t\t.filter((card) => card.date + card.day <= currentDateWithMinutes)\n\t\t\t\t\t.splice(0, state.config.maxReview);\n\n\t\t\t\tconst cards = [\n\t\t\t\t\t...newCardPool.splice(0, state.config.maxNew - state.activity.count),\n\t\t\t\t\t...reviewCards\n\t\t\t\t];\n\n\t\t\t\tif (!cards.length) {\n\t\t\t\t\treturn resolve({\n\t\t\t\t\t\tcards: [],\n\t\t\t\t\t\tmessage: 'You need to rest'\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn resolve({\n\t\t\t\t\tcards: shuffle(cards),\n\t\t\t\t\tmessage: undefined,\n\t\t\t\t});\n\t\t\t})\n\t\t});\n\t}\n\n\tlowCardStatus(card) {\n\t\tif (!production) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (card.status === TO_REVIEW) {\n\t\t\tthis.addToReviewList(card);\n\t\t\treturn;\n\t\t}\n\n\t\tif (card.status === IN_LEARN) {\n\t\t\tthis.addToNewList(card);\n\t\t\treturn;\n\t\t}\n\t}\n\n\tupCardStatus(card) {\n\t\tif (!production) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (card.status === IN_LEARN || card.status === TO_REVIEW) {\n\t\t\tthis.addToKnowList(card);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!card.status) {\n\t\t\tthis.db.ref('/activity/count').once('value', (data) => {\n\t\t\t\tconst count = data.val();\n\t\t\t\tthis.db.ref('activity/count').set(count + 1);\n\t\t\t});\n\t\t}\n\n\t\tthis.addToReviewList(card);\n\t}\n\n\taddToKnowList(card) {\n\t\tif (!production) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If kanji learning less then 4 hours we should send it to ReviewList.\n\t\tif (card.status !== TO_REVIEW && card.day <= HOUR * 4) {\n\t\t\tthis.addToReviewList(card);\n\t\t\treturn;\n\t\t}\n\n\t\tconst intervalRepeating = card.day + card.day * 2 >= MONTH\n\t\t\t? card.day + MONTH\n\t\t\t: card.day + card.day * 2;\n\t\tconst date = card.status === IN_LEARN ? getDate() : card.date;\n\n\t\tthis.db.ref(`knowList/${card.id}`).set({ ...card, date, day: intervalRepeating, status: TO_REVIEW, });\n\t\tthis.db.ref(`reviewList/${card.id}`).set(null);\n\t}\n\n\taddToReviewList(card) {\n\t\tif (!production) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst intervalRepeating = !card.day\n\t\t\t? FIFTEEN_MINUTES\n\t\t\t: card.day >= HOUR * 4\n\t\t\t\t? DAY\n\t\t\t\t: card.day + card.day * 2;\n\t\tconst date = card.date\n\t\t\t? card.date\n\t\t\t: getDateWithHoursAndMinutes();\n\n\t\tthis.db.ref(`knowList/${card.id}`).set(null);\n\t\tthis.db.ref(`reviewList/${card.id}`).set({ ...card, date, day: intervalRepeating, status: IN_LEARN, });\n\t}\n\n\taddToNewList(card) {\n\t\tif (!production) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.db.ref(`knowList/${card.id}`).set(null);\n\t\tthis.db.ref(`reviewList/${card.id}`).set({\n\t\t\t...card,\n\t\t\tdate: getDateWithHoursAndMinutes(),\n\t\t\tday: FIFTEEN_MINUTES,\n\t\t\tstatus: IN_LEARN\n\t\t});\n\t}\n}\n\nexport default new Firebase()\n","import React from 'react'\nimport { useSprings, animated, interpolate } from 'react-spring'\nimport { useGesture } from 'react-use-gesture'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport KanjiCard from '../../components/KanjiCard';\nimport firebase from '../../libs/firebase'\nimport { Typography } from '@material-ui/core';\n\n// These two are just helpers, they curate spring data, values that are later being interpolated into css\nconst to = (i) => ({ x: 0, y: i * -4, scale: 1, rot: -10 + Math.random() * 20, delay: i * 50 });\nconst from = (i) => ({ x: 0, rot: 0, scale: 1.5, y: -1000 });\n// This is being used down there in the view, it interpolates rotation and scale into a css transform\nconst trans = (r, s) => `perspective(1000px) rotateX(5deg) rotateY(${r / 10}deg) rotateZ(${r}deg) scale(${s})`;\n\nconst gone = new Set();\nconst repeat = new Set();\n\nexport function Stack() {\n    const classes = useStyles();\n    const [{ circle }, setState] = React.useState({ circle: 1 });\n    const [ cards, setCards ] = React.useState([]);\n    const [ message, setMessage ] = React.useState(undefined);\n    const [ props, set ] = useSprings(cards.length, i => ({ ...to(i), from: from(i) })); // Create a bunch of springs using the helpers above\n\n    React.useEffect(() => {\n        firebase.getKanjiCards().then(({ cards, message }) => {\n            setCards(cards);\n            setMessage(message);\n        });\n    }, []);\n\n    // Create a gesture, we're interested in down-state, delta (current-pos - click-pos), direction and velocity\n    const bind = useGesture(({ args: [index], down, delta: [xDelta], direction: [xDir], velocity }) => {\n        const trigger = velocity > 0.2; // If you flick hard enough it should trigger the card to fly out\n        const dir = xDir < 0 ? -1 : 1; // Direction should either point () => console.log => console.log('rigth')left') or right\n\n        if (!down && trigger) {\n            if (dir === 1) {\n                console.log('I know this card');\n                gone.add(index); // If button/finger's up and trigger velocity is reached, we flag the card ready to fly out\n                firebase.upCardStatus(cards[index]);\n            }\n            if (dir === -1) {\n                console.log('Need to repeat');\n                repeat.add(index); // If button/finger's up and trigger velocity is reached, we flag the card ready to fly out\n                firebase.lowCardStatus(cards[index]);\n            }\n        }\n\n        set((i) => {\n            if (index !== i) {\n                return;\n            } // We're only interested in changing spring-data for the current spring\n\n            const isGone = gone.has(index) || repeat.has(index);\n            const x = isGone ? (100 + window.innerWidth) * dir : down ? xDelta : 0; // When a card is gone it flys out left or right, otherwise goes back to zero\n            const rot = xDelta / 100 + (isGone ? dir * 10 * velocity : 0); // How much the card tilts, flicking it harder makes it rotate faster\n            const scale = down ? 1.1 : 1; // Active cards lift up a bit\n\n            return { x, rot, scale, delay: undefined, config: { friction: 50, tension: down ? 800 : isGone ? 200 : 500 } }\n        })\n    });\n\n    const repeatCb = () => {\n        console.log('Next round!');\n        setTimeout(() => {\n            setState({ circle: circle + 1 });\n            let list = [];\n            repeat.forEach((i) => list.push(i));\n            gone.clear();\n            repeat.clear();\n            set((i) => list.indexOf(i) !== -1 ? to(i) : from(i));\n        }, 600);\n    };\n\n    // Now we're just mapping the animated values to our view, that's it. Btw, this component only renders once. :-)\n    return (\n        <>\n            <div className={classes.wrapper}>\n                {!!message &&\n                    <Typography color='secondary' variant=\"h3\" gutterBottom>\n                        休みましょう\n                    </Typography>\n                }\n                {!!cards.length &&\n                    <div className={classes.container}>\n                        <Button color='secondary' onClick={repeatCb}>再びますか</Button>\n                    </div>\n                }\n                {props.map(({ x, y, rot, scale }, i) => (\n                    <animated.div className={classes.container} key={cards[i].id} style={{ transform: interpolate([x, y], (x, y) => `translate3d(${x}px,${y}px,0) rotate(${x / 25}deg)`) }}>\n                        {/* This is the card itself, we're binding our gesture to it (and inject its index so we know which is which) */}\n                        <animated.div {...bind(i)} style={{ transform: interpolate([rot, scale], trans) }}>\n                            <KanjiCard key={cards[i].id + circle} data={cards[i]} />\n                        </animated.div>\n                    </animated.div>\n                ))}\n            </div>\n            {!!cards.length &&\n                <div className={classes.actions}>\n                    <ButtonGroup fullWidth color=\"secondary\" aria-label=\"Outlined primary button group\">\n                        <Button onClick={() => console.log('left')}>いいえ</Button>\n                        <Button onClick={() => console.log('right')}>はい</Button>\n                    </ButtonGroup>\n                </div>\n            }\n        </>\n    )\n};\n\nconst useStyles = makeStyles((theme) => ({\n    wrapper: {\n        backgroundColor: theme.palette.primary.main,\n        position: 'fixed',\n        overflow: 'hidden',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100%',\n        height: '100%',\n    },\n    container: {\n        userSelect: 'none',\n        backgroundColor: 'transparent',\n        position: 'absolute',\n        willChange: 'transform',\n    },\n    actions: {\n        position: 'absolute',\n        width: 300,\n        bottom: 30,\n    },\n}));\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Stack } from '../../components/Stack';\n\nexport default function App() {\n  const classes = useStyles();\n\n  return (\n    <Grid container justify=\"center\" className={classes.root}>\n      <Stack />\n    </Grid>\n  )\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: '100%',\n    height: '100%',\n  },\n}));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport grey from '@material-ui/core/colors/grey';\nimport indigo from '@material-ui/core/colors/indigo';\nimport * as serviceWorker from './serviceWorker';\nimport App from './containers/App';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            text: grey[500],\n            light: grey[700],\n            main: indigo[50],\n            dark: grey[900],\n        },\n    },\n    typography: {\n        useNextVariants: true,\n        fontFamily: [\n            \"Source Han Sans\",\n            \"源ノ角ゴシック\",\n            \"Hiragino Sans\",\n            \"HiraKakuProN-W3\",\n            \"Hiragino Kaku Gothic ProN W3\",\n            \"Hiragino Kaku Gothic ProN\",\n            \"ヒラギノ角ゴ ProN W3\",\n            \"Noto Sans\",\n            \"Noto Sans CJK JP\",\n            \"メイリオ\",\n            \"游ゴシック\",\n            \"ＭＳ Ｐゴシック\",\n            \"MS PGothic\",\n            \"ＭＳ ゴシック\",\n            \"MS Gothic\",\n            'sans-serif',\n        ].join(','),\n    },\n});\n\nReactDOM.render(\n    <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <App />\n    </ThemeProvider>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}